package arr;


import java.util.ArrayList;
import java.util.List;

/**
 * 未知长度且乱序的数组，要求设计一种算法，实现偶数在前，奇数在后
 */
public class Test {
    public static void main(String[] args) {
//        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8};
        int length = 100;
        int[] arr = new int[length];
        System.out.println("分组之前：");
        for (int i = 0; i < length; i++) {
            arr[i] = (int) (Math.random() * 100);
            System.out.print(arr[i] + " ,");
        }
        System.out.println("");
        System.out.println("分组之后：");
        int[] newArr = sortCustom(arr);
        System.out.println("分组之后：");
        for (int i = 0; i < newArr.length; i++) {
            System.out.print(newArr[i] + " ,");
        }
        System.out.println("");
        System.out.println("分组法二：");
        Object[] objs= sort2(arr);
        for (int i = 0; i < objs.length; i++) {
            System.out.print(objs[i].toString() + " ,");
        }
    }

    private static int[] sortCustom(int[] arr) {
        if (arr == null || arr.length <= 0) return null;
        int l = 0, r = arr.length - 1;
        while (r > 0 && l <= r) {
            if (arr[l] % 2 == 0) {//偶数
                l++;
            } else {//奇数，交换
                int temp = arr[l];
                arr[l] = arr[r];
                arr[r] = temp;
            }
            if (arr[r] % 2 == 0) {//偶数
                //偶数交换
                int temp = arr[r];
                arr[r] = arr[l];
                arr[l] = temp;
            } else {//奇数
                r--;

            }
        }
        return arr;
    }
    public static Object[] sort2(int[] arr){
        List<Integer> l1=new ArrayList<Integer>();
//        List<Integer> l1= Arrays.asList(arr);
        List<Integer> l2=new ArrayList<Integer>();
        for (int i = 0; i < arr.length; i++) {
            if (arr[i]%2==0){
                //偶数
                l1.add(arr[i]);
            }else{
                l2.add(arr[i]);
            }
        }
        l1.addAll(l2);
       return l1.toArray();
    }
/**
 * 打印结果：
 * 分组之前：
 19 ,39 ,90 ,40 ,43 ,64 ,14 ,53 ,23 ,93 ,50 ,97 ,61 ,27 ,56 ,67 ,88 ,48 ,22 ,31 ,2 ,37 ,53 ,71 ,44 ,1 ,87 ,17 ,36 ,47 ,12 ,80 ,78 ,64 ,44 ,15 ,28 ,96 ,30 ,6 ,13 ,13 ,87 ,58 ,93 ,96 ,52 ,69 ,92 ,13 ,9 ,58 ,21 ,63 ,90 ,99 ,91 ,19 ,95 ,42 ,73 ,33 ,55 ,69 ,67 ,9 ,72 ,71 ,97 ,94 ,5 ,15 ,92 ,89 ,31 ,4 ,4 ,20 ,16 ,20 ,54 ,82 ,33 ,5 ,9 ,10 ,24 ,76 ,10 ,98 ,79 ,13 ,32 ,50 ,4 ,43 ,22 ,21 ,91 ,15 ,
 分组之后：
 22 ,4 ,50 ,90 ,40 ,64 ,32 ,14 ,98 ,10 ,50 ,76 ,24 ,10 ,56 ,82 ,54 ,88 ,48 ,22 ,2 ,20 ,16 ,20 ,44 ,4 ,4 ,92 ,36 ,94 ,12 ,80 ,72 ,78 ,64 ,44 ,28 ,96 ,30 ,6 ,42 ,90 ,58 ,58 ,92 ,96 ,69 ,52 ,93 ,13 ,9 ,21 ,87 ,63 ,99 ,91 ,19 ,13 ,95 ,73 ,33 ,13 ,55 ,69 ,67 ,9 ,15 ,71 ,97 ,47 ,5 ,15 ,89 ,17 ,31 ,87 ,1 ,71 ,53 ,37 ,31 ,33 ,5 ,67 ,9 ,27 ,61 ,97 ,93 ,79 ,13 ,23 ,53 ,43 ,39 ,43 ,21 ,91 ,15 ,19 ,
 Process finished with exit code 0
 */
/**
 分组之前：
 9 ,72 ,39 ,29 ,75 ,62 ,63 ,54 ,82 ,43 ,65 ,69 ,53 ,74 ,24 ,14 ,68 ,53 ,30 ,46 ,16 ,14 ,74 ,25 ,74 ,22 ,70 ,63 ,81 ,14 ,37 ,89 ,8 ,31 ,46 ,99 ,52 ,48 ,25 ,47 ,87 ,31 ,67 ,26 ,95 ,93 ,23 ,36 ,37 ,87 ,58 ,73 ,89 ,79 ,70 ,64 ,60 ,44 ,90 ,25 ,23 ,40 ,82 ,81 ,43 ,7 ,31 ,64 ,49 ,60 ,62 ,89 ,28 ,60 ,62 ,70 ,1 ,51 ,78 ,17 ,70 ,82 ,65 ,65 ,31 ,48 ,6 ,36 ,46 ,26 ,85 ,53 ,36 ,79 ,85 ,9 ,95 ,71 ,28 ,80 ,
 分组之后：
 分组之后：
 80 ,28 ,72 ,36 ,26 ,46 ,62 ,54 ,36 ,82 ,6 ,48 ,82 ,70 ,74 ,24 ,14 ,68 ,30 ,46 ,78 ,16 ,14 ,74 ,74 ,22 ,70 ,70 ,62 ,60 ,14 ,28 ,8 ,62 ,46 ,60 ,52 ,48 ,64 ,82 ,40 ,90 ,44 ,26 ,60 ,64 ,70 ,36 ,58 ,87 ,73 ,89 ,37 ,79 ,23 ,93 ,95 ,67 ,25 ,23 ,31 ,87 ,81 ,43 ,7 ,31 ,47 ,25 ,49 ,99 ,31 ,89 ,89 ,37 ,81 ,63 ,1 ,51 ,25 ,17 ,53 ,65 ,65 ,31 ,53 ,69 ,65 ,43 ,63 ,85 ,75 ,53 ,79 ,85 ,9 ,95 ,71 ,29 ,39 ,9 ,
 分组法二：
 80 ,28 ,72 ,36 ,26 ,46 ,62 ,54 ,36 ,82 ,6 ,48 ,82 ,70 ,74 ,24 ,14 ,68 ,30 ,46 ,78 ,16 ,14 ,74 ,74 ,22 ,70 ,70 ,62 ,60 ,14 ,28 ,8 ,62 ,46 ,60 ,52 ,48 ,64 ,82 ,40 ,90 ,44 ,26 ,60 ,64 ,70 ,36 ,58 ,87 ,73 ,89 ,37 ,79 ,23 ,93 ,95 ,67 ,25 ,23 ,31 ,87 ,81 ,43 ,7 ,31 ,47 ,25 ,49 ,99 ,31 ,89 ,89 ,37 ,81 ,63 ,1 ,51 ,25 ,17 ,53 ,65 ,65 ,31 ,53 ,69 ,65 ,43 ,63 ,85 ,75 ,53 ,79 ,85 ,9 ,95 ,71 ,29 ,39 ,9 ,
 Process finished with exit code
 */
}
